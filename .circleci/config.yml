version: 2.1

parameters:
  # this flag allows you to disable the default workflow, e.g. when running the standalone publish-snapshot workflow
  enable-default-workflow:
    description: "enables the main workflow that builds and tests on all branches and publishes a snapshot on master"
    type: boolean
    default: true

  # this flag allows you to publish a snapshot from any branch, using a standalone workflow
  enable-publish-snapshot-workflow:
    description: "enables the standalone workflow to build and publish a snapshot from any branch"
    type: boolean
    default: false

aliases:
  - &workspace
      ~/audioswitch

  - &gradle-cache-key
      jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  - &release-filter
    filters:
      tags:
        only:
          - /^\d+\.\d+\.\d+$/
      branches:
        ignore: /.*/

  - &snapshot-filter
    filters:
      branches:
        only:
          - master

commands:
  restore_gradle_cache:
    steps:
      - restore_cache:
          key: *gradle-cache-key
          name: Restore Gradle Cache

  save_gradle_cache:
    steps:
      - save_cache:
          key: *gradle-cache-key
          name: Save Gradle Cache
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper

  setup_git_user:
    description: Configure git user
    steps:
      - run:
          name: Configure git user name and email
          command: |
            git config --global user.email $GIT_USER_EMAIL
            git config --global user.name $GIT_USER_NAME

  setup_gcloud:
    description: Authenticate with Google Cloud
    steps:
      - run:
          name: Setup GCloud Auth
          command: |
            echo $GCP_KEY | base64 -d | gcloud auth activate-service-account --key-file=-

  install_signing_key:
    steps:
      - run:
          name: Install signing key
          command: |
            echo $SIGNING_KEY | base64 -d >> $SIGNING_SECRET_KEY_RING_FILE

  publish_to_sonatype:
    description: Publish to Sonatype Repository
    parameters:
      pre-release:
        description: If true, publish a pre-release, otherwise publish a release
        type: boolean
    steps:
      - run:
          name: Publish AudioSwitch <<# parameters.pre-release >> snapshot <</ parameters.pre-release >><<^ parameters.pre-release >> release <</ parameters.pre-release >>
          command: |
            ./gradlew -q sonatypeAudioSwitchReleaseUpload \
            -PpreRelease=<< parameters.pre-release >>

executors:
  build-executor:
    working_directory: *workspace
    docker:
      - image: cimg/android:2024.01.1-node
    resource_class: large
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"

  integration-test-executor:
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    resource_class: medium+

jobs:
  lint:
    executor: build-executor
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Lint
          command: ./gradlew -q lint
      - store_artifacts:
          path: audioswitch/build/reports/lint-results.html
          destination: audioswitch
      - save_gradle_cache

  check-format:
    executor: build-executor
    resource_class: medium+
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Spotless Check
          command: ./gradlew -q spotlessCheck
      - save_gradle_cache

  build-audioswitch:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run:
          name: Build AudioSwitch and Tests
          command: ./gradlew -q audioswitch:assemble audioswitch:assembleAndroidTest
      - persist_to_workspace:
          root: .
          paths:
            - audioswitch/build
      - save_gradle_cache

  unit-tests:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run:
          name: Unit Tests
          command: ./gradlew audioswitch:testDebugUnitTest
      - save_gradle_cache

  integration-tests:
    executor: integration-test-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - setup_gcloud
      - run:
          name: Run Integration Tests
          command: >
            gcloud firebase test android run --use-orchestrator --environment-variables clearPackageData=true --no-record-video --project video-app-79418
            ui-test-args.yaml:integration-tests

  publish-pre-release:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - install_signing_key
      - publish_to_sonatype:
          pre-release: true
      - save_gradle_cache

  publish-release:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - install_signing_key
      - publish_to_sonatype:
          pre-release: false
      - save_gradle_cache

  bump-version:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - setup_git_user
      - run:
          name: Bump Version
          command: ./gradlew incrementVersion
      - save_gradle_cache

  publish-docs:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - setup_git_user
      - run:
          name: Publish Docs
          command: ./gradlew publishDocs
      - save_gradle_cache

workflows:
  # Default workflow. Triggered by all commits. Runs checks and tests on all branches. For master, also publishes a snapshot.
  build-test-publish:
    when: << pipeline.parameters.enable-default-workflow >>
    jobs:
      - lint
      - check-format
      - build-audioswitch
      - unit-tests:
          requires:
            - build-audioswitch
            - lint
            - check-format
      - integration-tests:
          requires:
            - build-audioswitch
            - lint
            - check-format
      - publish-pre-release:
          <<: *snapshot-filter
          requires:
            - unit-tests
            - integration-tests

  # Workflow to publish a release. Triggered by new git tags that match a version number, e.g. '1.2.3'.
  release:
    jobs:
      - publish-release:
          <<: *release-filter
      - publish-docs:
          <<: *release-filter
          requires:
            - publish-release
      - bump-version:
          <<: *release-filter
          requires:
            - publish-docs

  # Workflow to explicitly build and publish a snapshot. Triggered manually by setting the parameter to true.
  publish-snapshot:
    when: << pipeline.parameters.enable-publish-snapshot-workflow >>
    jobs:
      - publish-pre-release
